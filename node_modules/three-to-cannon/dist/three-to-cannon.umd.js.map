{"version":3,"file":"three-to-cannon.umd.js","sources":["../lib/ConvexHull.js","../src/utils.ts","../src/index.ts"],"sourcesContent":["import {\n\tBufferGeometry,\n\tLine3,\n\tPlane,\n\tTriangle,\n\tVector3\n} from 'three';\n/**\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\n */\n\nvar ConvexHull = ( function () {\n\n\tvar Visible = 0;\n\tvar Deleted = 1;\n\n\tvar v1 = new Vector3();\n\n\tfunction ConvexHull() {\n\n\t\tthis.tolerance = - 1;\n\n\t\tthis.faces = []; // the generated faces of the convex hull\n\t\tthis.newFaces = []; // this array holds the faces that are generated within a single iteration\n\n\t\t// the vertex lists work as follows:\n\t\t//\n\t\t// let 'a' and 'b' be 'Face' instances\n\t\t// let 'v' be points wrapped as instance of 'Vertex'\n\t\t//\n\t\t//     [v, v, ..., v, v, v, ...]\n\t\t//      ^             ^\n\t\t//      |             |\n\t\t//  a.outside     b.outside\n\t\t//\n\t\tthis.assigned = new VertexList();\n\t\tthis.unassigned = new VertexList();\n\n\t\tthis.vertices = []; \t// vertices of the hull (internal representation of given geometry data)\n\n\t}\n\n\tObject.assign( ConvexHull.prototype, {\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tif ( Array.isArray( points ) !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.ConvexHull: Points parameter is not an array.' );\n\n\t\t\t}\n\n\t\t\tif ( points.length < 4 ) {\n\n\t\t\t\tconsole.error( 'THREE.ConvexHull: The algorithm needs at least four points.' );\n\n\t\t\t}\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tthis.vertices.push( new VertexNode( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.compute();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tvar points = [];\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( function ( node ) {\n\n\t\t\t\tvar i, l, point;\n\n\t\t\t\tvar geometry = node.geometry;\n\n\t\t\t\tif ( geometry === undefined ) return;\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tgeometry = geometry.toBufferGeometry\n\t\t\t\t\t\t? geometry.toBufferGeometry()\n\t\t\t\t\t\t: new BufferGeometry().fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tpoint = new Vector3();\n\n\t\t\t\t\t\t\tpoint.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tpoints.push( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.setFromPoints( points );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar faces = this.faces;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// compute signed distance and check on what half space the point lies\n\n\t\t\t\tif ( face.distanceToPoint( point ) > this.tolerance ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectRay: function ( ray, target ) {\n\n\t\t\t// based on \"Fast Ray-Convex Polyhedron Intersection\"  by Eric Haines, GRAPHICS GEMS II\n\n\t\t\tvar faces = this.faces;\n\n\t\t\tvar tNear = - Infinity;\n\t\t\tvar tFar = Infinity;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// interpret faces as planes for the further computation\n\n\t\t\t\tvar vN = face.distanceToPoint( ray.origin );\n\t\t\t\tvar vD = face.normal.dot( ray.direction );\n\n\t\t\t\t// if the origin is on the positive side of a plane (so the plane can \"see\" the origin) and\n\t\t\t\t// the ray is turned away or parallel to the plane, there is no intersection\n\n\t\t\t\tif ( vN > 0 && vD >= 0 ) return null;\n\n\t\t\t\t// compute the distance from the rayâ€™s origin to the intersection with the plane\n\n\t\t\t\tvar t = ( vD !== 0 ) ? ( - vN / vD ) : 0;\n\n\t\t\t\t// only proceed if the distance is positive. a negative distance means the intersection point\n\t\t\t\t// lies \"behind\" the origin\n\n\t\t\t\tif ( t <= 0 ) continue;\n\n\t\t\t\t// now categorized plane as front-facing or back-facing\n\n\t\t\t\tif ( vD > 0 ) {\n\n\t\t\t\t\t//  plane faces away from the ray, so this plane is a back-face\n\n\t\t\t\t\ttFar = Math.min( t, tFar );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// front-face\n\n\t\t\t\t\ttNear = Math.max( t, tNear );\n\n\t\t\t\t}\n\n\t\t\t\tif ( tNear > tFar ) {\n\n\t\t\t\t\t// if tNear ever is greater than tFar, the ray must miss the convex hull\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// evaluate intersection point\n\n\t\t\t// always try tNear first since its the closer intersection point\n\n\t\t\tif ( tNear !== - Infinity ) {\n\n\t\t\t\tray.at( tNear, target );\n\n\t\t\t} else {\n\n\t\t\t\tray.at( tFar, target );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tintersectsRay: function ( ray ) {\n\n\t\t\treturn this.intersectRay( ray, v1 ) !== null;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.faces = [];\n\t\t\tthis.vertices = [];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n\n\t\taddVertexToFace: function ( vertex, face ) {\n\n\t\t\tvertex.face = face;\n\n\t\t\tif ( face.outside === null ) {\n\n\t\t\t\tthis.assigned.append( vertex );\n\n\t\t\t} else {\n\n\t\t\t\tthis.assigned.insertBefore( face.outside, vertex );\n\n\t\t\t}\n\n\t\t\tface.outside = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes a vertex from the 'assigned' list of vertices and from the given face\n\n\t\tremoveVertexFromFace: function ( vertex, face ) {\n\n\t\t\tif ( vertex === face.outside ) {\n\n\t\t\t\t// fix face.outside link\n\n\t\t\t\tif ( vertex.next !== null && vertex.next.face === face ) {\n\n\t\t\t\t\t// face has at least 2 outside vertices, move the 'outside' reference\n\n\t\t\t\t\tface.outside = vertex.next;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// vertex was the only outside vertex that face had\n\n\t\t\t\t\tface.outside = null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.assigned.remove( vertex );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\n\n\t\tremoveAllVerticesFromFace: function ( face ) {\n\n\t\t\tif ( face.outside !== null ) {\n\n\t\t\t\t// reference to the first and last vertex of this face\n\n\t\t\t\tvar start = face.outside;\n\t\t\t\tvar end = face.outside;\n\n\t\t\t\twhile ( end.next !== null && end.next.face === face ) {\n\n\t\t\t\t\tend = end.next;\n\n\t\t\t\t}\n\n\t\t\t\tthis.assigned.removeSubList( start, end );\n\n\t\t\t\t// fix references\n\n\t\t\t\tstart.prev = end.next = null;\n\t\t\t\tface.outside = null;\n\n\t\t\t\treturn start;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Removes all the visible vertices that 'face' is able to see\n\n\t\tdeleteFaceVertices: function ( face, absorbingFace ) {\n\n\t\t\tvar faceVertices = this.removeAllVerticesFromFace( face );\n\n\t\t\tif ( faceVertices !== undefined ) {\n\n\t\t\t\tif ( absorbingFace === undefined ) {\n\n\t\t\t\t\t// mark the vertices to be reassigned to some other face\n\n\t\t\t\t\tthis.unassigned.appendChain( faceVertices );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// if there's an absorbing face try to assign as many vertices as possible to it\n\n\t\t\t\t\tvar vertex = faceVertices;\n\n\t\t\t\t\tdo {\n\n\t\t\t\t\t\t// we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\n\t\t\t\t\t\t// will be changed by upcoming method calls\n\n\t\t\t\t\t\tvar nextVertex = vertex.next;\n\n\t\t\t\t\t\tvar distance = absorbingFace.distanceToPoint( vertex.point );\n\n\t\t\t\t\t\t// check if 'vertex' is able to see 'absorbingFace'\n\n\t\t\t\t\t\tif ( distance > this.tolerance ) {\n\n\t\t\t\t\t\t\tthis.addVertexToFace( vertex, absorbingFace );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis.unassigned.append( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// now assign next vertex\n\n\t\t\t\t\t\tvertex = nextVertex;\n\n\t\t\t\t\t} while ( vertex !== null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Reassigns as many vertices as possible from the unassigned list to the new faces\n\n\t\tresolveUnassignedPoints: function ( newFaces ) {\n\n\t\t\tif ( this.unassigned.isEmpty() === false ) {\n\n\t\t\t\tvar vertex = this.unassigned.first();\n\n\t\t\t\tdo {\n\n\t\t\t\t\t// buffer 'next' reference, see .deleteFaceVertices()\n\n\t\t\t\t\tvar nextVertex = vertex.next;\n\n\t\t\t\t\tvar maxDistance = this.tolerance;\n\n\t\t\t\t\tvar maxFace = null;\n\n\t\t\t\t\tfor ( var i = 0; i < newFaces.length; i ++ ) {\n\n\t\t\t\t\t\tvar face = newFaces[ i ];\n\n\t\t\t\t\t\tif ( face.mark === Visible ) {\n\n\t\t\t\t\t\t\tvar distance = face.distanceToPoint( vertex.point );\n\n\t\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\t\tmaxFace = face;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( maxDistance > 1000 * this.tolerance ) break;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// 'maxFace' can be null e.g. if there are identical vertices\n\n\t\t\t\t\tif ( maxFace !== null ) {\n\n\t\t\t\t\t\tthis.addVertexToFace( vertex, maxFace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvertex = nextVertex;\n\n\t\t\t\t} while ( vertex !== null );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Computes the extremes of a simplex which will be the initial hull\n\n\t\tcomputeExtremes: function () {\n\n\t\t\tvar min = new Vector3();\n\t\t\tvar max = new Vector3();\n\n\t\t\tvar minVertices = [];\n\t\t\tvar maxVertices = [];\n\n\t\t\tvar i, l, j;\n\n\t\t\t// initially assume that the first vertex is the min/max\n\n\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\tminVertices[ i ] = maxVertices[ i ] = this.vertices[ 0 ];\n\n\t\t\t}\n\n\t\t\tmin.copy( this.vertices[ 0 ].point );\n\t\t\tmax.copy( this.vertices[ 0 ].point );\n\n\t\t\t// compute the min/max vertex on all six directions\n\n\t\t\tfor ( i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvar point = vertex.point;\n\n\t\t\t\t// update the min coordinates\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tif ( point.getComponent( j ) < min.getComponent( j ) ) {\n\n\t\t\t\t\t\tmin.setComponent( j, point.getComponent( j ) );\n\t\t\t\t\t\tminVertices[ j ] = vertex;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// update the max coordinates\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tif ( point.getComponent( j ) > max.getComponent( j ) ) {\n\n\t\t\t\t\t\tmax.setComponent( j, point.getComponent( j ) );\n\t\t\t\t\t\tmaxVertices[ j ] = vertex;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use min/max vectors to compute an optimal epsilon\n\n\t\t\tthis.tolerance = 3 * Number.EPSILON * (\n\t\t\t\tMath.max( Math.abs( min.x ), Math.abs( max.x ) ) +\n\t\t\t\tMath.max( Math.abs( min.y ), Math.abs( max.y ) ) +\n\t\t\t\tMath.max( Math.abs( min.z ), Math.abs( max.z ) )\n\t\t\t);\n\n\t\t\treturn { min: minVertices, max: maxVertices };\n\n\t\t},\n\n\t\t// Computes the initial simplex assigning to its faces all the points\n\t\t// that are candidates to form part of the hull\n\n\t\tcomputeInitialHull: function () {\n\n\t\t\tvar line3, plane, closestPoint;\n\n\t\t\treturn function computeInitialHull() {\n\n\t\t\t\tif ( line3 === undefined ) {\n\n\t\t\t\t\tline3 = new Line3();\n\t\t\t\t\tplane = new Plane();\n\t\t\t\t\tclosestPoint = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tvar vertex, vertices = this.vertices;\n\t\t\t\tvar extremes = this.computeExtremes();\n\t\t\t\tvar min = extremes.min;\n\t\t\t\tvar max = extremes.max;\n\n\t\t\t\tvar v0, v1, v2, v3;\n\t\t\t\tvar i, l, j;\n\n\t\t\t\t// 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\n\t\t\t\t// (max.x - min.x)\n\t\t\t\t// (max.y - min.y)\n\t\t\t\t// (max.z - min.z)\n\n\t\t\t\tvar distance, maxDistance = 0;\n\t\t\t\tvar index = 0;\n\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tdistance = max[ i ].point.getComponent( i ) - min[ i ].point.getComponent( i );\n\n\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\tindex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tv0 = min[ index ];\n\t\t\t\tv1 = max[ index ];\n\n\t\t\t\t// 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\n\n\t\t\t\tmaxDistance = 0;\n\t\t\t\tline3.set( v0.point, v1.point );\n\n\t\t\t\tfor ( i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tvertex = vertices[ i ];\n\n\t\t\t\t\tif ( vertex !== v0 && vertex !== v1 ) {\n\n\t\t\t\t\t\tline3.closestPointToPoint( vertex.point, true, closestPoint );\n\n\t\t\t\t\t\tdistance = closestPoint.distanceToSquared( vertex.point );\n\n\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\tv2 = vertex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\n\n\t\t\t\tmaxDistance = - 1;\n\t\t\t\tplane.setFromCoplanarPoints( v0.point, v1.point, v2.point );\n\n\t\t\t\tfor ( i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tvertex = vertices[ i ];\n\n\t\t\t\t\tif ( vertex !== v0 && vertex !== v1 && vertex !== v2 ) {\n\n\t\t\t\t\t\tdistance = Math.abs( plane.distanceToPoint( vertex.point ) );\n\n\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\tv3 = vertex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar faces = [];\n\n\t\t\t\tif ( plane.distanceToPoint( v3.point ) < 0 ) {\n\n\t\t\t\t\t// the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tFace.create( v0, v1, v2 ),\n\t\t\t\t\t\tFace.create( v3, v1, v0 ),\n\t\t\t\t\t\tFace.create( v3, v2, v1 ),\n\t\t\t\t\t\tFace.create( v3, v0, v2 )\n\t\t\t\t\t);\n\n\t\t\t\t\t// set the twin edge\n\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tj = ( i + 1 ) % 3;\n\n\t\t\t\t\t\t// join face[ i ] i > 0, with the first face\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 2 ).setTwin( faces[ 0 ].getEdge( j ) );\n\n\t\t\t\t\t\t// join face[ i ] with face[ i + 1 ], 1 <= i <= 3\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 1 ).setTwin( faces[ j + 1 ].getEdge( 0 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tFace.create( v0, v2, v1 ),\n\t\t\t\t\t\tFace.create( v3, v0, v1 ),\n\t\t\t\t\t\tFace.create( v3, v1, v2 ),\n\t\t\t\t\t\tFace.create( v3, v2, v0 )\n\t\t\t\t\t);\n\n\t\t\t\t\t// set the twin edge\n\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tj = ( i + 1 ) % 3;\n\n\t\t\t\t\t\t// join face[ i ] i > 0, with the first face\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 2 ).setTwin( faces[ 0 ].getEdge( ( 3 - i ) % 3 ) );\n\n\t\t\t\t\t\t// join face[ i ] with face[ i + 1 ]\n\n\t\t\t\t\t\tfaces[ i + 1 ].getEdge( 0 ).setTwin( faces[ j + 1 ].getEdge( 1 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// the initial hull is the tetrahedron\n\n\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\tthis.faces.push( faces[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t// initial assignment of vertices to the faces of the tetrahedron\n\n\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tvertex = vertices[ i ];\n\n\t\t\t\t\tif ( vertex !== v0 && vertex !== v1 && vertex !== v2 && vertex !== v3 ) {\n\n\t\t\t\t\t\tmaxDistance = this.tolerance;\n\t\t\t\t\t\tvar maxFace = null;\n\n\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\tdistance = this.faces[ j ].distanceToPoint( vertex.point );\n\n\t\t\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\t\t\tmaxFace = this.faces[ j ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( maxFace !== null ) {\n\n\t\t\t\t\t\t\tthis.addVertexToFace( vertex, maxFace );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\t// Removes inactive faces\n\n\t\treindexFaces: function () {\n\n\t\t\tvar activeFaces = [];\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tif ( face.mark === Visible ) {\n\n\t\t\t\t\tactiveFaces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.faces = activeFaces;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Finds the next vertex to create faces with the current hull\n\n\t\tnextVertexToAdd: function () {\n\n\t\t\t// if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\n\n\t\t\tif ( this.assigned.isEmpty() === false ) {\n\n\t\t\t\tvar eyeVertex, maxDistance = 0;\n\n\t\t\t\t// grap the first available face and start with the first visible vertex of that face\n\n\t\t\t\tvar eyeFace = this.assigned.first().face;\n\t\t\t\tvar vertex = eyeFace.outside;\n\n\t\t\t\t// now calculate the farthest vertex that face can see\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvar distance = eyeFace.distanceToPoint( vertex.point );\n\n\t\t\t\t\tif ( distance > maxDistance ) {\n\n\t\t\t\t\t\tmaxDistance = distance;\n\t\t\t\t\t\teyeVertex = vertex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvertex = vertex.next;\n\n\t\t\t\t} while ( vertex !== null && vertex.face === eyeFace );\n\n\t\t\t\treturn eyeVertex;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Computes a chain of half edges in CCW order called the 'horizon'.\n\t\t// For an edge to be part of the horizon it must join a face that can see\n\t\t// 'eyePoint' and a face that cannot see 'eyePoint'.\n\n\t\tcomputeHorizon: function ( eyePoint, crossEdge, face, horizon ) {\n\n\t\t\t// moves face's vertices to the 'unassigned' vertex list\n\n\t\t\tthis.deleteFaceVertices( face );\n\n\t\t\tface.mark = Deleted;\n\n\t\t\tvar edge;\n\n\t\t\tif ( crossEdge === null ) {\n\n\t\t\t\tedge = crossEdge = face.getEdge( 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// start from the next edge since 'crossEdge' was already analyzed\n\t\t\t\t// (actually 'crossEdge.twin' was the edge who called this method recursively)\n\n\t\t\t\tedge = crossEdge.next;\n\n\t\t\t}\n\n\t\t\tdo {\n\n\t\t\t\tvar twinEdge = edge.twin;\n\t\t\t\tvar oppositeFace = twinEdge.face;\n\n\t\t\t\tif ( oppositeFace.mark === Visible ) {\n\n\t\t\t\t\tif ( oppositeFace.distanceToPoint( eyePoint ) > this.tolerance ) {\n\n\t\t\t\t\t\t// the opposite face can see the vertex, so proceed with next edge\n\n\t\t\t\t\t\tthis.computeHorizon( eyePoint, twinEdge, oppositeFace, horizon );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// the opposite face can't see the vertex, so this edge is part of the horizon\n\n\t\t\t\t\t\thorizon.push( edge );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tedge = edge.next;\n\n\t\t\t} while ( edge !== crossEdge );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n\n\t\taddAdjoiningFace: function ( eyeVertex, horizonEdge ) {\n\n\t\t\t// all the half edges are created in ccw order thus the face is always pointing outside the hull\n\n\t\t\tvar face = Face.create( eyeVertex, horizonEdge.tail(), horizonEdge.head() );\n\n\t\t\tthis.faces.push( face );\n\n\t\t\t// join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\n\n\t\t\tface.getEdge( - 1 ).setTwin( horizonEdge.twin );\n\n\t\t\treturn face.getEdge( 0 ); // the half edge whose vertex is the eyeVertex\n\n\n\t\t},\n\n\t\t//  Adds 'horizon.length' faces to the hull, each face will be linked with the\n\t\t//  horizon opposite face and the face on the left/right\n\n\t\taddNewFaces: function ( eyeVertex, horizon ) {\n\n\t\t\tthis.newFaces = [];\n\n\t\t\tvar firstSideEdge = null;\n\t\t\tvar previousSideEdge = null;\n\n\t\t\tfor ( var i = 0; i < horizon.length; i ++ ) {\n\n\t\t\t\tvar horizonEdge = horizon[ i ];\n\n\t\t\t\t// returns the right side edge\n\n\t\t\t\tvar sideEdge = this.addAdjoiningFace( eyeVertex, horizonEdge );\n\n\t\t\t\tif ( firstSideEdge === null ) {\n\n\t\t\t\t\tfirstSideEdge = sideEdge;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\n\n\t\t\t\t\tsideEdge.next.setTwin( previousSideEdge );\n\n\t\t\t\t}\n\n\t\t\t\tthis.newFaces.push( sideEdge.face );\n\t\t\t\tpreviousSideEdge = sideEdge;\n\n\t\t\t}\n\n\t\t\t// perform final join of new faces\n\n\t\t\tfirstSideEdge.next.setTwin( previousSideEdge );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Adds a vertex to the hull\n\n\t\taddVertexToHull: function ( eyeVertex ) {\n\n\t\t\tvar horizon = [];\n\n\t\t\tthis.unassigned.clear();\n\n\t\t\t// remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\n\n\t\t\tthis.removeVertexFromFace( eyeVertex, eyeVertex.face );\n\n\t\t\tthis.computeHorizon( eyeVertex.point, null, eyeVertex.face, horizon );\n\n\t\t\tthis.addNewFaces( eyeVertex, horizon );\n\n\t\t\t// reassign 'unassigned' vertices to the new faces\n\n\t\t\tthis.resolveUnassignedPoints( this.newFaces );\n\n\t\t\treturn\tthis;\n\n\t\t},\n\n\t\tcleanup: function () {\n\n\t\t\tthis.assigned.clear();\n\t\t\tthis.unassigned.clear();\n\t\t\tthis.newFaces = [];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompute: function () {\n\n\t\t\tvar vertex;\n\n\t\t\tthis.computeInitialHull();\n\n\t\t\t// add all available vertices gradually to the hull\n\n\t\t\twhile ( ( vertex = this.nextVertexToAdd() ) !== undefined ) {\n\n\t\t\t\tthis.addVertexToHull( vertex );\n\n\t\t\t}\n\n\t\t\tthis.reindexFaces();\n\n\t\t\tthis.cleanup();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Face() {\n\n\t\tthis.normal = new Vector3();\n\t\tthis.midpoint = new Vector3();\n\t\tthis.area = 0;\n\n\t\tthis.constant = 0; // signed distance from face to the origin\n\t\tthis.outside = null; // reference to a vertex in a vertex list this face can see\n\t\tthis.mark = Visible;\n\t\tthis.edge = null;\n\n\t}\n\n\tObject.assign( Face, {\n\n\t\tcreate: function ( a, b, c ) {\n\n\t\t\tvar face = new Face();\n\n\t\t\tvar e0 = new HalfEdge( a, face );\n\t\t\tvar e1 = new HalfEdge( b, face );\n\t\t\tvar e2 = new HalfEdge( c, face );\n\n\t\t\t// join edges\n\n\t\t\te0.next = e2.prev = e1;\n\t\t\te1.next = e0.prev = e2;\n\t\t\te2.next = e1.prev = e0;\n\n\t\t\t// main half edge reference\n\n\t\t\tface.edge = e0;\n\n\t\t\treturn face.compute();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Face.prototype, {\n\n\t\tgetEdge: function ( i ) {\n\n\t\t\tvar edge = this.edge;\n\n\t\t\twhile ( i > 0 ) {\n\n\t\t\t\tedge = edge.next;\n\t\t\t\ti --;\n\n\t\t\t}\n\n\t\t\twhile ( i < 0 ) {\n\n\t\t\t\tedge = edge.prev;\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn edge;\n\n\t\t},\n\n\t\tcompute: function () {\n\n\t\t\tvar triangle;\n\n\t\t\treturn function compute() {\n\n\t\t\t\tif ( triangle === undefined ) triangle = new Triangle();\n\n\t\t\t\tvar a = this.edge.tail();\n\t\t\t\tvar b = this.edge.head();\n\t\t\t\tvar c = this.edge.next.head();\n\n\t\t\t\ttriangle.set( a.point, b.point, c.point );\n\n\t\t\t\ttriangle.getNormal( this.normal );\n\t\t\t\ttriangle.getMidpoint( this.midpoint );\n\t\t\t\tthis.area = triangle.getArea();\n\n\t\t\t\tthis.constant = this.normal.dot( this.midpoint );\n\n\t\t\t\treturn this;\n\n\t\t\t};\n\n\t\t}(),\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) - this.constant;\n\n\t\t}\n\n\t} );\n\n\t// Entity for a Doubly-Connected Edge List (DCEL).\n\n\tfunction HalfEdge( vertex, face ) {\n\n\t\tthis.vertex = vertex;\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\t\tthis.twin = null;\n\t\tthis.face = face;\n\n\t}\n\n\tObject.assign( HalfEdge.prototype, {\n\n\t\thead: function () {\n\n\t\t\treturn this.vertex;\n\n\t\t},\n\n\t\ttail: function () {\n\n\t\t\treturn this.prev ? this.prev.vertex : null;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\tvar head = this.head();\n\t\t\tvar tail = this.tail();\n\n\t\t\tif ( tail !== null ) {\n\n\t\t\t\treturn tail.point.distanceTo( head.point );\n\n\t\t\t}\n\n\t\t\treturn - 1;\n\n\t\t},\n\n\t\tlengthSquared: function () {\n\n\t\t\tvar head = this.head();\n\t\t\tvar tail = this.tail();\n\n\t\t\tif ( tail !== null ) {\n\n\t\t\t\treturn tail.point.distanceToSquared( head.point );\n\n\t\t\t}\n\n\t\t\treturn - 1;\n\n\t\t},\n\n\t\tsetTwin: function ( edge ) {\n\n\t\t\tthis.twin = edge;\n\t\t\tedge.twin = this;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t// A vertex as a double linked list node.\n\n\tfunction VertexNode( point ) {\n\n\t\tthis.point = point;\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\t\tthis.face = null; // the face that is able to see this vertex\n\n\t}\n\n\t// A double linked list that contains vertex nodes.\n\n\tfunction VertexList() {\n\n\t\tthis.head = null;\n\t\tthis.tail = null;\n\n\t}\n\n\tObject.assign( VertexList.prototype, {\n\n\t\tfirst: function () {\n\n\t\t\treturn this.head;\n\n\t\t},\n\n\t\tlast: function () {\n\n\t\t\treturn this.tail;\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.head = this.tail = null;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Inserts a vertex before the target vertex\n\n\t\tinsertBefore: function ( target, vertex ) {\n\n\t\t\tvertex.prev = target.prev;\n\t\t\tvertex.next = target;\n\n\t\t\tif ( vertex.prev === null ) {\n\n\t\t\t\tthis.head = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.prev.next = vertex;\n\n\t\t\t}\n\n\t\t\ttarget.prev = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Inserts a vertex after the target vertex\n\n\t\tinsertAfter: function ( target, vertex ) {\n\n\t\t\tvertex.prev = target;\n\t\t\tvertex.next = target.next;\n\n\t\t\tif ( vertex.next === null ) {\n\n\t\t\t\tthis.tail = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.next.prev = vertex;\n\n\t\t\t}\n\n\t\t\ttarget.next = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Appends a vertex to the end of the linked list\n\n\t\tappend: function ( vertex ) {\n\n\t\t\tif ( this.head === null ) {\n\n\t\t\t\tthis.head = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tthis.tail.next = vertex;\n\n\t\t\t}\n\n\t\t\tvertex.prev = this.tail;\n\t\t\tvertex.next = null; // the tail has no subsequent vertex\n\n\t\t\tthis.tail = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Appends a chain of vertices where 'vertex' is the head.\n\n\t\tappendChain: function ( vertex ) {\n\n\t\t\tif ( this.head === null ) {\n\n\t\t\t\tthis.head = vertex;\n\n\t\t\t} else {\n\n\t\t\t\tthis.tail.next = vertex;\n\n\t\t\t}\n\n\t\t\tvertex.prev = this.tail;\n\n\t\t\t// ensure that the 'tail' reference points to the last vertex of the chain\n\n\t\t\twhile ( vertex.next !== null ) {\n\n\t\t\t\tvertex = vertex.next;\n\n\t\t\t}\n\n\t\t\tthis.tail = vertex;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes a vertex from the linked list\n\n\t\tremove: function ( vertex ) {\n\n\t\t\tif ( vertex.prev === null ) {\n\n\t\t\t\tthis.head = vertex.next;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.prev.next = vertex.next;\n\n\t\t\t}\n\n\t\t\tif ( vertex.next === null ) {\n\n\t\t\t\tthis.tail = vertex.prev;\n\n\t\t\t} else {\n\n\t\t\t\tvertex.next.prev = vertex.prev;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n\n\t\tremoveSubList: function ( a, b ) {\n\n\t\t\tif ( a.prev === null ) {\n\n\t\t\t\tthis.head = b.next;\n\n\t\t\t} else {\n\n\t\t\t\ta.prev.next = b.next;\n\n\t\t\t}\n\n\t\t\tif ( b.next === null ) {\n\n\t\t\t\tthis.tail = a.prev;\n\n\t\t\t} else {\n\n\t\t\t\tb.next.prev = a.prev;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\treturn this.head === null;\n\n\t\t}\n\n\t} );\n\n\treturn ConvexHull;\n\n} )();\n\nexport { ConvexHull };\n","import { BufferAttribute, BufferGeometry, Mesh, Object3D, Quaternion, Vector3 } from 'three';\nimport type { Geometry } from 'three/examples/jsm/deprecated/Geometry';\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _q1 = new Quaternion();\n\n/**\n* Returns a single geometry for the given object. If the object is compound,\n* its geometries are automatically merged. Bake world scale into each\n* geometry, because we can't easily apply that to the cannonjs shapes later.\n*/\nexport function getGeometry (object: Object3D): BufferGeometry | null {\n\tconst meshes = getMeshes(object);\n\tif (meshes.length === 0) return null;\n\n\t// Single mesh. Return, preserving original type.\n\tif (meshes.length === 1) {\n\t\treturn normalizeGeometry(meshes[0]);\n\t}\n\n\t// Multiple meshes. Merge and return.\n\tlet mesh: Mesh | undefined;\n\tconst geometries: BufferGeometry[] = [];\n\twhile ((mesh = meshes.pop())) {\n\t\tgeometries.push(simplifyGeometry(normalizeGeometry(mesh)));\n\t}\n\n\treturn mergeBufferGeometries(geometries);\n}\n\nfunction normalizeGeometry (mesh: Mesh): BufferGeometry {\n\tlet geometry: BufferGeometry = mesh.geometry;\n\tif ((geometry as unknown as Geometry).toBufferGeometry) {\n\t\tgeometry = (geometry as unknown as Geometry).toBufferGeometry();\n\t} else {\n\t\t// Preserve original type, e.g. CylinderBufferGeometry.\n\t\tgeometry = geometry.clone();\n\t}\n\n\tmesh.updateMatrixWorld();\n\tmesh.matrixWorld.decompose(_v1, _q1, _v2);\n\tgeometry.scale(_v2.x, _v2.y, _v2.z);\n\treturn geometry;\n}\n\n/**\n * Greatly simplified version of BufferGeometryUtils.mergeBufferGeometries.\n * Because we only care about the vertex positions, and not the indices or\n * other attributes, we throw everything else away.\n */\nfunction mergeBufferGeometries (geometries: BufferGeometry[]): BufferGeometry {\n\tlet vertexCount = 0;\n\tfor (let i = 0; i < geometries.length; i++) {\n\t\tconst position = geometries[i].attributes.position;\n\t\tif (position && position.itemSize === 3) {\n\t\t\tvertexCount += position.count;\n\t\t}\n\t}\n\n\tconst positionArray = new Float32Array(vertexCount * 3);\n\n\tlet positionOffset = 0;\n\tfor (let i = 0; i < geometries.length; i++) {\n\t\tconst position = geometries[i].attributes.position;\n\t\tif (position && position.itemSize === 3) {\n\t\t\tfor (let j = 0; j < position.count; j++) {\n\t\t\t\tpositionArray[positionOffset++] = position.getX(j);\n\t\t\t\tpositionArray[positionOffset++] = position.getY(j);\n\t\t\t\tpositionArray[positionOffset++] = position.getZ(j);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn new BufferGeometry().setAttribute('position', new BufferAttribute(positionArray, 3));\n}\n\nexport function getVertices (geometry: BufferGeometry): Float32Array {\n\tconst position = geometry.attributes.position;\n\tconst vertices = new Float32Array(position.count * 3);\n\tfor (let i = 0; i < position.count; i++) {\n\t\tvertices[i * 3] = position.getX(i);\n\t\tvertices[i * 3 + 1] = position.getY(i);\n\t\tvertices[i * 3 + 2] = position.getZ(i);\n\t}\n\treturn vertices;\n}\n\n/**\n* Returns a flat array of THREE.Mesh instances from the given object. If\n* nested transformations are found, they are applied to child meshes\n* as mesh.userData.matrix, so that each mesh has its position/rotation/scale\n* independently of all of its parents except the top-level object.\n*/\nfunction getMeshes (object: Object3D): Mesh[] {\n\tconst meshes: Mesh[] = [];\n\tobject.traverse(function (o) {\n\t\tif ((o as Mesh).isMesh) {\n\t\t\tmeshes.push(o as Mesh);\n\t\t}\n\t});\n\treturn meshes;\n}\n\nexport function getComponent(v: Vector3, component: string): number {\n\tswitch(component) {\n\t\tcase 'x': return v.x;\n\t\tcase 'y': return v.y;\n\t\tcase 'z': return v.z;\n\t}\n\tthrow new Error(`Unexpected component ${component}`);\n}\n\n/**\n* Modified version of BufferGeometryUtils.mergeVertices, ignoring vertex\n* attributes other than position.\n*\n* @param {THREE.BufferGeometry} geometry\n* @param {number} tolerance\n* @return {THREE.BufferGeometry>}\n*/\nfunction simplifyGeometry (geometry: BufferGeometry, tolerance = 1e-4): BufferGeometry {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex: {[key: string]: number} = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// Next value for triangle indices.\n\tlet nextIndex = 0;\n\n\tconst newIndices = [];\n\tconst newPositions = [];\n\n\t// Convert the error tolerance to an amount of decimal places to truncate to.\n\tconst decimalShift = Math.log10( 1 / tolerance );\n\tconst shiftMultiplier = Math.pow( 10, decimalShift );\n\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'.\n\t\tlet hash = '';\n\n\t\t// Double tilde truncates the decimal value.\n\t\thash += `${ ~ ~ ( positions.getX( index ) * shiftMultiplier ) },`;\n\t\thash += `${ ~ ~ ( positions.getY( index ) * shiftMultiplier ) },`;\n\t\thash += `${ ~ ~ ( positions.getZ( index ) * shiftMultiplier ) },`;\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index.\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\tnewPositions.push( positions.getX( index ) );\n\t\t\tnewPositions.push( positions.getY( index ) );\n\t\t\tnewPositions.push( positions.getZ( index ) );\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// Construct merged BufferGeometry.\n\n\tconst positionAttribute = new BufferAttribute(\n\t\tnew Float32Array( newPositions ),\n\t\tpositions.itemSize,\n\t\tpositions.normalized\n\t);\n\n\tconst result = new BufferGeometry();\n\tresult.setAttribute( 'position', positionAttribute );\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n","import { Box, Quaternion as CQuaternion, ConvexPolyhedron, Cylinder, Shape, Sphere, Trimesh, Vec3 } from 'cannon-es';\nimport { Box3, BufferGeometry, CylinderGeometry, MathUtils, Mesh, Object3D, SphereGeometry, Vector3 } from 'three';\nimport { ConvexHull } from '../lib/ConvexHull.js';\nimport { getComponent, getGeometry, getVertices } from './utils';\n\nconst PI_2 = Math.PI / 2;\n\nexport type BoxParameters = { x: number, y: number, z: number };\n\nexport type CylinderParameters = { radiusTop: number, radiusBottom: number, height: number, segments: number };\n\nexport type SphereParameters = { radius: number };\n\nexport type ConvexPolyhedronParameters = { vertices: Float32Array, faces: number[][] };\n\nexport type TrimeshParameters = { vertices: Float32Array, indices: Uint32Array };\n\ntype ShapeTypeToShapeParameters = {\n\tBox: BoxParameters,\n\tCylinder: CylinderParameters,\n\tSphere: SphereParameters,\n\tConvexPolyhedron: ConvexPolyhedronParameters,\n\tTrimesh: TrimeshParameters,\n};\n\nexport enum ShapeType {\n\tBOX = 'Box',\n\tCYLINDER = 'Cylinder',\n\tSPHERE = 'Sphere',\n\tHULL = 'ConvexPolyhedron',\n\tMESH = 'Trimesh',\n}\n\nexport interface ShapeOptions {\n\ttype?: ShapeType,\n\tcylinderAxis?: 'x' | 'y' | 'z',\n\tsphereRadius?: number,\n}\n\nexport interface ShapeParameters<T extends ShapeType = ShapeType> {\n\ttype: T,\n\tparams: ShapeTypeToShapeParameters[T],\n\toffset?: Vec3,\n\torientation?: CQuaternion,\n}\n\nexport interface ShapeResult<T extends Shape = Shape> {\n\tshape: T,\n\toffset?: Vec3,\n\torientation?: CQuaternion,\n}\n\n/**\n * Given a THREE.Object3D instance, creates parameters for a CANNON shape.\n */\nexport const getShapeParameters = function (object: Object3D, options: ShapeOptions = {}): ShapeParameters | null {\n\tlet geometry: BufferGeometry | null;\n\n\tif (options.type === ShapeType.BOX) {\n\t\treturn getBoundingBoxParameters(object);\n\t} else if (options.type === ShapeType.CYLINDER) {\n\t\treturn getBoundingCylinderParameters(object, options);\n\t} else if (options.type === ShapeType.SPHERE) {\n\t\treturn getBoundingSphereParameters(object, options);\n\t} else if (options.type === ShapeType.HULL) {\n\t\treturn getConvexPolyhedronParameters(object);\n\t} else if (options.type === ShapeType.MESH) {\n\t\tgeometry = getGeometry(object);\n\t\treturn geometry ? getTrimeshParameters(geometry) : null;\n\t} else if (options.type) {\n\t\tthrow new Error(`[CANNON.getShapeParameters] Invalid type \"${options.type}\".`);\n\t}\n\n\tgeometry = getGeometry(object);\n\tif (!geometry) return null;\n\n\tswitch (geometry.type) {\n\t\tcase 'BoxGeometry':\n\t\tcase 'BoxBufferGeometry':\n\t\t\treturn getBoxParameters(geometry);\n\t\tcase 'CylinderGeometry':\n\t\tcase 'CylinderBufferGeometry':\n\t\t\treturn getCylinderParameters(geometry as CylinderGeometry);\n\t\tcase 'PlaneGeometry':\n\t\tcase 'PlaneBufferGeometry':\n\t\t\treturn getPlaneParameters(geometry);\n\t\tcase 'SphereGeometry':\n\t\tcase 'SphereBufferGeometry':\n\t\t\treturn getSphereParameters(geometry as SphereGeometry);\n\t\tcase 'TubeGeometry':\n\t\tcase 'BufferGeometry':\n\t\t\treturn getBoundingBoxParameters(object);\n\t\tdefault:\n\t\t\tconsole.warn(\n\t\t\t\t'Unrecognized geometry: \"%s\". Using bounding box as shape.', geometry.type\n\t\t\t);\n\t\t\treturn getBoxParameters(geometry);\n\t}\n};\n\n/**\n * Given a THREE.Object3D instance, creates a corresponding CANNON shape.\n */\nexport const threeToCannon = function (object: Object3D, options: ShapeOptions = {}): ShapeResult | null {\n\tconst shapeParameters = getShapeParameters(object, options);\n\tif (!shapeParameters) {\n\t\treturn null;\n\t}\n\n\tconst { type, params, offset, orientation } = shapeParameters;\n\n\tlet shape: Shape;\n\tif (type === ShapeType.BOX) {\n\t\tshape = createBox(params as BoxParameters);\n\t} else if (type === ShapeType.CYLINDER) {\n\t\tshape = createCylinder(params as CylinderParameters);\n\t} else if (type === ShapeType.SPHERE) {\n\t\tshape = createSphere(params as SphereParameters);\n\t} else if (type === ShapeType.HULL) {\n\t\tshape = createConvexPolyhedron(params as ConvexPolyhedronParameters);\n\t} else {\n\t\tshape = createTrimesh(params as TrimeshParameters);\n\t}\n\n\treturn {\n\t\tshape,\n\t\toffset,\n\t\torientation,\n\t};\n};\n\n/******************************************************************************\n * Shape construction\n */\n\n function createBox (params: BoxParameters): Box {\n\tconst { x, y, z } = params;\n\tconst shape = new Box(new Vec3(x, y, z));\n\treturn shape;\n}\n\nfunction createCylinder (params: CylinderParameters): Cylinder {\n\tconst { radiusTop, radiusBottom, height, segments } = params;\n\n\tconst shape = new Cylinder(radiusTop, radiusBottom, height, segments);\n\n\t// Include metadata for serialization.\n\t// TODO(cleanup): Is this still necessary?\n\tshape.radiusTop = radiusBottom;\n\tshape.radiusBottom = radiusBottom;\n\tshape.height = height;\n\tshape.numSegments = segments;\n\n\treturn shape;\n}\n\nfunction createSphere (params: SphereParameters): Sphere {\n\tconst shape = new Sphere(params.radius);\n\n\treturn shape;\n}\n\nfunction createConvexPolyhedron (params: ConvexPolyhedronParameters): ConvexPolyhedron {\n\tconst { faces, vertices: verticesArray } = params;\n\n\tconst vertices: Vec3[] = [];\n\tfor (let i = 0; i < verticesArray.length; i += 3) {\n\t\tvertices.push(new Vec3(\n\t\t\tverticesArray[i],\n\t\t\tverticesArray[i + 1],\n\t\t\tverticesArray[i + 2]\n\t\t));\n\t}\n\n\tconst shape = new ConvexPolyhedron({\n\t\tfaces,\n\t\tvertices\n\t});\n\n\treturn shape;\n}\n\nfunction createTrimesh (params: TrimeshParameters): Trimesh {\n\tconst { vertices, indices } = params\n\tconst shape = new Trimesh(\n\t\tvertices as unknown as number[],\n\t\tindices as unknown as number[],\n\t);\n\n\treturn shape;\n}\n\n/******************************************************************************\n * Shape parameters\n */\n\nfunction getBoxParameters (geometry: BufferGeometry): ShapeParameters<ShapeType.BOX> | null {\n\tconst vertices = getVertices(geometry);\n\n\tif (!vertices.length) return null;\n\n\tgeometry.computeBoundingBox();\n\tconst box = geometry.boundingBox!;\n\n\treturn {\n\t\ttype: ShapeType.BOX,\n\t\tparams: {\n\t\t\tx: (box.max.x - box.min.x) / 2,\n\t\t\ty: (box.max.y - box.min.y) / 2,\n\t\t\tz: (box.max.z - box.min.z) / 2,\n\t\t},\n\t};\n}\n\n/** Bounding box needs to be computed with the entire subtree, not just geometry. */\nfunction getBoundingBoxParameters (object: Object3D): ShapeParameters<ShapeType.BOX> | null {\n\tconst clone = object.clone();\n\tclone.quaternion.set(0, 0, 0, 1);\n\tclone.updateMatrixWorld();\n\n\tconst box = new Box3().setFromObject(clone);\n\n\tif (!isFinite(box.min.lengthSq())) return null;\n\n\tconst localPosition = box.translate(clone.position.negate()).getCenter(new Vector3());\n\n\treturn {\n\t\ttype: ShapeType.BOX,\n\t\tparams: {\n\t\t\tx: (box.max.x - box.min.x) / 2,\n\t\t\ty: (box.max.y - box.min.y) / 2,\n\t\t\tz: (box.max.z - box.min.z) / 2,\n\t\t},\n\t\toffset: localPosition.lengthSq()\n\t\t\t? new Vec3(localPosition.x, localPosition.y, localPosition.z)\n\t\t\t: undefined,\n\t};\n}\n\n/** Computes 3D convex hull as a CANNON.ConvexPolyhedron. */\nfunction getConvexPolyhedronParameters (object: Object3D): ShapeParameters<ShapeType.HULL> | null {\n\tconst geometry = getGeometry(object);\n\n\tif (!geometry) return null;\n\n\t// Perturb.\n\tconst eps = 1e-4;\n\tfor (let i = 0; i < geometry.attributes.position.count; i++) {\n\t\tgeometry.attributes.position.setXYZ(\n\t\t\ti,\n\t\t\tgeometry.attributes.position.getX(i) + (Math.random() - 0.5) * eps,\n\t\t\tgeometry.attributes.position.getY(i) + (Math.random() - 0.5) * eps,\n\t\t\tgeometry.attributes.position.getZ(i) + (Math.random() - 0.5) * eps,\n\t\t);\n\t}\n\n\t// Compute the 3D convex hull.\n\tconst hull = new ConvexHull().setFromObject(new Mesh(geometry));\n\tconst hullFaces = hull.faces;\n\tconst vertices: number[] = [];\n\tconst faces: number[][] = [];\n\n\tlet currentFaceVertex = 0;\n\tfor (let i = 0; i < hullFaces.length; i++) {\n\t\tconst hullFace = hullFaces[ i ];\n\t\tconst face: number[] = [];\n\t\tfaces.push(face);\n\n\t\tlet edge = hullFace.edge;\n\t\tdo {\n\t\t\tconst point = edge.head().point;\n\t\t\tvertices.push(point.x, point.y, point.z);\n\t\t\tface.push(currentFaceVertex);\n\t\t\tcurrentFaceVertex++;\n\t\t\tedge = edge.next;\n\t\t} while ( edge !== hullFace.edge );\n\t}\n\n\tconst verticesTypedArray = new Float32Array(vertices.length);\n\tverticesTypedArray.set(vertices);\n\n\treturn {\n\t\ttype: ShapeType.HULL,\n\t\tparams: { vertices: verticesTypedArray, faces },\n\t};\n}\n\nfunction getCylinderParameters (\n\tgeometry: CylinderGeometry\n): ShapeParameters<ShapeType.CYLINDER> | null {\n\tconst params = geometry.parameters;\n\n\treturn {\n\t\ttype: ShapeType.CYLINDER,\n\t\tparams: {\n\t\t\tradiusTop: params.radiusTop,\n\t\t\tradiusBottom: params.radiusBottom,\n\t\t\theight: params.height,\n\t\t\tsegments: params.radialSegments,\n\t\t},\n\t\torientation: new CQuaternion()\n\t\t\t.setFromEuler(MathUtils.degToRad(-90), 0, 0, 'XYZ')\n\t\t\t.normalize(),\n\t}\n}\n\nfunction getBoundingCylinderParameters (\n\tobject: Object3D,\n\toptions: ShapeOptions\n): ShapeParameters<ShapeType.CYLINDER> | null {\n\tconst axes = ['x', 'y', 'z'];\n\tconst majorAxis = options.cylinderAxis || 'y';\n\tconst minorAxes = axes.splice(axes.indexOf(majorAxis), 1) && axes;\n\tconst box = new Box3().setFromObject(object);\n\n\tif (!isFinite(box.min.lengthSq())) return null;\n\n\t// Compute cylinder dimensions.\n\tconst height = box.max[majorAxis] - box.min[majorAxis];\n\tconst radius = 0.5 * Math.max(\n\t\tgetComponent(box.max, minorAxes[0]) - getComponent(box.min, minorAxes[0]),\n\t\tgetComponent(box.max, minorAxes[1]) - getComponent(box.min, minorAxes[1]),\n\t);\n\n\tconst eulerX = majorAxis === 'y' ? PI_2 : 0;\n\tconst eulerY = majorAxis === 'z' ? PI_2 : 0;\n\n\treturn {\n\t\ttype: ShapeType.CYLINDER,\n\t\tparams: {\n\t\t\tradiusTop: radius,\n\t\t\tradiusBottom: radius,\n\t\t\theight,\n\t\t\tsegments: 12,\n\t\t},\n\t\torientation: new CQuaternion()\n\t\t\t.setFromEuler(eulerX, eulerY, 0, 'XYZ')\n\t\t\t.normalize(),\n\t};\n}\n\nfunction getPlaneParameters (geometry: BufferGeometry): ShapeParameters<ShapeType.BOX> | null {\n\tgeometry.computeBoundingBox();\n\tconst box = geometry.boundingBox!;\n\n\treturn {\n\t\ttype: ShapeType.BOX,\n\t\tparams: {\n\t\t\tx: (box.max.x - box.min.x) / 2 || 0.1,\n\t\t\ty: (box.max.y - box.min.y) / 2 || 0.1,\n\t\t\tz: (box.max.z - box.min.z) / 2 || 0.1,\n\t\t},\n\t};\n}\n\nfunction getSphereParameters (geometry: SphereGeometry): ShapeParameters<ShapeType.SPHERE> | null {\n\treturn {\n\t\ttype: ShapeType.SPHERE,\n\t\tparams: { radius: geometry.parameters.radius },\n\t};\n}\n\nfunction getBoundingSphereParameters (\n\tobject: Object3D,\n\toptions: ShapeOptions\n): ShapeParameters<ShapeType.SPHERE> | null {\n\tif (options.sphereRadius) {\n\t\treturn {\n\t\t\ttype: ShapeType.SPHERE,\n\t\t\tparams: { radius: options.sphereRadius },\n\t\t};\n\t}\n\tconst geometry = getGeometry(object);\n\tif (!geometry) return null;\n\tgeometry.computeBoundingSphere();\n\n\treturn {\n\t\ttype: ShapeType.SPHERE,\n\t\tparams: { radius: geometry.boundingSphere!.radius },\n\t};\n}\n\nfunction getTrimeshParameters (geometry: BufferGeometry): ShapeParameters<ShapeType.MESH> | null {\n\tconst vertices = getVertices(geometry);\n\n\tif (!vertices.length) return null;\n\n\tconst indices = new Uint32Array(vertices.length);\n\tfor (let i = 0; i < vertices.length; i++) {\n\t\tindices[i] = i;\n\t}\n\n\treturn {\n\t\ttype: ShapeType.MESH,\n\t\tparams: {\n\t\t\tvertices,\n\t\t\tindices,\n\t\t},\n\t};\n}\n"],"names":["ConvexHull","Visible","Deleted","v1","Vector3","tolerance","faces","newFaces","assigned","VertexList","unassigned","vertices","Object","assign","prototype","setFromPoints","points","Array","isArray","console","error","length","makeEmpty","i","l","push","VertexNode","compute","setFromObject","object","updateMatrixWorld","traverse","node","point","geometry","undefined","isGeometry","toBufferGeometry","BufferGeometry","fromGeometry","isBufferGeometry","attribute","attributes","position","count","fromBufferAttribute","applyMatrix4","matrixWorld","containsPoint","face","distanceToPoint","intersectRay","ray","target","tNear","Infinity","tFar","vN","origin","vD","normal","dot","direction","t","Math","min","max","at","intersectsRay","addVertexToFace","vertex","outside","append","insertBefore","removeVertexFromFace","next","remove","removeAllVerticesFromFace","start","end","removeSubList","prev","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distance","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","mark","computeExtremes","minVertices","maxVertices","j","copy","getComponent","setComponent","Number","EPSILON","abs","x","y","z","computeInitialHull","line3","plane","closestPoint","Line3","Plane","extremes","v0","v2","v3","index","set","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","Face","create","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","edge","twinEdge","twin","oppositeFace","addAdjoiningFace","horizonEdge","tail","head","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","clear","cleanup","midpoint","area","constant","a","b","c","e0","HalfEdge","e1","e2","triangle","Triangle","getNormal","getMidpoint","getArea","distanceTo","lengthSquared","last","insertAfter","_v1","_v2","_q1","Quaternion","getGeometry","meshes","getMeshes","normalizeGeometry","mesh","geometries","pop","simplifyGeometry","mergeBufferGeometries","clone","decompose","scale","vertexCount","itemSize","positionArray","Float32Array","positionOffset","getX","getY","getZ","setAttribute","BufferAttribute","getVertices","o","isMesh","v","component","Error","hashToIndex","indices","getIndex","positions","getAttribute","nextIndex","newIndices","newPositions","decimalShift","log10","shiftMultiplier","pow","hash","positionAttribute","normalized","result","setIndex","PI_2","PI","ShapeType","getShapeParameters","options","type","BOX","getBoundingBoxParameters","CYLINDER","getBoundingCylinderParameters","SPHERE","getBoundingSphereParameters","HULL","getConvexPolyhedronParameters","MESH","getTrimeshParameters","getBoxParameters","getCylinderParameters","getPlaneParameters","getSphereParameters","warn","threeToCannon","shapeParameters","params","offset","orientation","shape","createBox","createCylinder","createSphere","createConvexPolyhedron","createTrimesh","Box","Vec3","radiusTop","radiusBottom","height","segments","Cylinder","numSegments","Sphere","radius","verticesArray","ConvexPolyhedron","Trimesh","computeBoundingBox","box","boundingBox","quaternion","Box3","isFinite","lengthSq","localPosition","translate","negate","getCenter","eps","setXYZ","random","hull","Mesh","hullFaces","currentFaceVertex","hullFace","verticesTypedArray","parameters","radialSegments","CQuaternion","setFromEuler","MathUtils","degToRad","normalize","axes","majorAxis","cylinderAxis","minorAxes","splice","indexOf","eulerX","eulerY","sphereRadius","computeBoundingSphere","boundingSphere","Uint32Array"],"mappings":"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"}